import io
import json
from zipfile import ZipFile


# Вариант 1 - используя файловую систему

# создаем архив и json файл
with ZipFile('1.zip', 'w') as zip_file:
    with open('1.json', 'w') as js_file:

        # dump так как на жесткий диск
        json.dump({'a': 1, 'b': 2}, js_file)

        # запись файла смещает буфер в конец
        # его нужно вернуть на нулевую позицию
        js_file.seek(0)

        # добавляем файл в архив
        zip_file.write('1.json')


# Вариант 2 - используя оперативную память

# создание общего буфера в который будет записываться информация
# используется BytesIO, так идет поток байтов
# так же есть метож StringIO
zip_buf = io.BytesIO()

# создаем архив, но вместо имени записи на диск указываем буфер
with ZipFile(zip_buf, 'w') as zip_file:

    # создаем ещё один буфер, чтобы хранить результат json
    with io.BytesIO() as js_buf:

        # метод dumps позволяет сеарилизовать данные в оперативной памяти
        data = json.dumps({'a': 1, 'b': 2})

        # записываем результат в буфер
        # метод encode нужен чтобы преобразовать строку в бинарные данные
        # при записи позиция буфера смещается в конец
        js_buf.write(data.encode())

        # чтобы прочитать данные в буфере
        js_buf.seek(0)
        print(js_buf.read())

        # запись в архив json файла
        # используется writestr тк write для записи данных с диска
        # writestr принимает название файла и сам файл
        js_buf.seek(0)
        zip_file.writestr('1.json', js_buf.read())

# читаем получивщийся архив из буфера
# При чтении получаются бинарные данные, которые можно передавать 
# через сокеты, отправлять на сервера и тд.
zip_buf.seek(0)
zip_buf.read()
